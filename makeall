#!/bin/bash

# Rebuild and install all libyui related packages (including yast)
# !! Use a scratch machine or a container for this !!

# Run from a git superdir, containing checkouts of all yui related repos

set -eu
set -x

buildrequires() {
  zypper --non-interactive in --no-recommends osc build \
     make cmake boost-devel gcc-c++ pkg-config doxygen sudo \
     libqt5-qtbase-devel libqt5-qtsvg-devel libqt5-qtx11extras-devel \
     fontconfig-devel      ncurses-devel      graphviz-devel \
     libzypp-devel \
     swig ruby-devel python-devel \
     yast2-devtools yast2-core-devel \
     libmicrohttpd-devel jsoncpp-devel \
     libtool docbook-xsl-stylesheets \
     xauth xorg-x11-fonts
}

makerepo() {
    # git checkout master

    if test -f ./bootstrap.sh; then
        ./bootstrap.sh
    fi

    if test -f CMakeLists.txt; then
        test -f CMakeLists.txt || ./bootstrap.sh

        if $CLEAN; then
            rm -rf build
        fi
        mkdir -p build; cd build
        cmake -DCMAKE_BUILD_TYPE=RELWITHDEBINFO ..
    else
        make -f Makefile.cvs
    fi

    make -j$(nproc)
    if $INSTALL; then
        $SUDO make install
    fi
}

LIBYUI_REPOS='
libyui
yast-ycp-ui-bindings
libyui-rest-api
libyui-ncurses          libyui-qt
                        libyui-qt-graph
libyui-ncurses-pkg      libyui-qt-pkg
libyui-ncurses-rest-api libyui-qt-rest-api
'


# libyui-bindings ruby-ui
# LIBYUI_REPOS="$LIBYUI_REPOS libyui-gtk libyui-gtk-pkg"

MGA_REPOS='libyui-mga
libyui-mga-gtk libyui-mga-ncurses libyui-mga-qt'

#REPOS="libyui  libyui-ncurses  libyui-ncurses-pkg libyui-qt libyui-qt-pkg
#REPOS=libyui-qt

PARSED=$(getopt -o 'bci' --long 'buildrequires,clean,install' -- "$@")
eval set -- "$PARSED"
unset PARSED

CLEAN=false
INSTALL=false
SUDO=""

while true; do
    case "$1" in
        '-b'|'--buildrequires')
            buildrequires
            shift
            ;;
        '-c'|'--clean')
            CLEAN=true
            shift
            ;;
        '-i'|'--install')
            INSTALL=true
            shift
            ;;
        '-s'|'--sudo')
            SUDO=sudo
            shift
            ;;
        '-b'|'--b-long')
            echo "Option b, argument '$2'"
            shift 2
            ;;
        '--')
            shift
            break
            ;;
        *)
            echo 'Internal error!' >&2
            exit 1
            ;;
    esac
done

if test $# == 0; then
    set -- $LIBYUI_REPOS
fi

for i in "$@" ; do
    echo == $i ==
    pushd $i #> /dev/null
    makerepo
    popd #> /dev/null
done
